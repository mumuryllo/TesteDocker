<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="vendas.repositories.UserRepositoryTest" time="2.871" tests="5" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="17"/>
    <property name="sun.cpu.isalist" value="amd64"/>
    <property name="sun.jnu.encoding" value="Cp1252"/>
    <property name="java.class.path" value="C:\Users\Muryllo\Desktop\TestesComSpringApiVendas\Vendas\SpringExemplo\target\test-classes;C:\Users\Muryllo\Desktop\TestesComSpringApiVendas\Vendas\SpringExemplo\target\classes;C:\Users\Muryllo\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.1.2\spring-boot-starter-validation-3.1.2.jar;C:\Users\Muryllo\.m2\repository\org\springframework\boot\spring-boot-starter\3.1.2\spring-boot-starter-3.1.2.jar;C:\Users\Muryllo\.m2\repository\org\springframework\boot\spring-boot\3.1.2\spring-boot-3.1.2.jar;C:\Users\Muryllo\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.1.2\spring-boot-autoconfigure-3.1.2.jar;C:\Users\Muryllo\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.1.2\spring-boot-starter-logging-3.1.2.jar;C:\Users\Muryllo\.m2\repository\ch\qos\logback\logback-classic\1.4.8\logback-classic-1.4.8.jar;C:\Users\Muryllo\.m2\repository\ch\qos\logback\logback-core\1.4.8\logback-core-1.4.8.jar;C:\Users\Muryllo\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.20.0\log4j-to-slf4j-2.20.0.jar;C:\Users\Muryllo\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\Muryllo\.m2\repository\org\slf4j\jul-to-slf4j\2.0.7\jul-to-slf4j-2.0.7.jar;C:\Users\Muryllo\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\Muryllo\.m2\repository\org\yaml\snakeyaml\1.33\snakeyaml-1.33.jar;C:\Users\Muryllo\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.11\tomcat-embed-el-10.1.11.jar;C:\Users\Muryllo\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.1.Final\hibernate-validator-8.0.1.Final.jar;C:\Users\Muryllo\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\Muryllo\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\Muryllo\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Muryllo\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.1.2\spring-boot-starter-web-3.1.2.jar;C:\Users\Muryllo\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.1.2\spring-boot-starter-json-3.1.2.jar;C:\Users\Muryllo\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.15.2\jackson-databind-2.15.2.jar;C:\Users\Muryllo\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.15.2\jackson-annotations-2.15.2.jar;C:\Users\Muryllo\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.15.2\jackson-core-2.15.2.jar;C:\Users\Muryllo\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.15.2\jackson-datatype-jdk8-2.15.2.jar;C:\Users\Muryllo\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.15.2\jackson-datatype-jsr310-2.15.2.jar;C:\Users\Muryllo\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.15.2\jackson-module-parameter-names-2.15.2.jar;C:\Users\Muryllo\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.1.2\spring-boot-starter-tomcat-3.1.2.jar;C:\Users\Muryllo\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.11\tomcat-embed-core-10.1.11.jar;C:\Users\Muryllo\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.11\tomcat-embed-websocket-10.1.11.jar;C:\Users\Muryllo\.m2\repository\org\springframework\spring-web\6.0.11\spring-web-6.0.11.jar;C:\Users\Muryllo\.m2\repository\org\springframework\spring-beans\6.0.11\spring-beans-6.0.11.jar;C:\Users\Muryllo\.m2\repository\io\micrometer\micrometer-observation\1.11.2\micrometer-observation-1.11.2.jar;C:\Users\Muryllo\.m2\repository\io\micrometer\micrometer-commons\1.11.2\micrometer-commons-1.11.2.jar;C:\Users\Muryllo\.m2\repository\org\springframework\spring-webmvc\6.0.11\spring-webmvc-6.0.11.jar;C:\Users\Muryllo\.m2\repository\org\springframework\spring-aop\6.0.11\spring-aop-6.0.11.jar;C:\Users\Muryllo\.m2\repository\org\springframework\spring-context\6.0.11\spring-context-6.0.11.jar;C:\Users\Muryllo\.m2\repository\org\springframework\spring-expression\6.0.11\spring-expression-6.0.11.jar;C:\Users\Muryllo\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.1.2\spring-boot-starter-data-jpa-3.1.2.jar;C:\Users\Muryllo\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.1.2\spring-boot-starter-aop-3.1.2.jar;C:\Users\Muryllo\.m2\repository\org\aspectj\aspectjweaver\1.9.19\aspectjweaver-1.9.19.jar;C:\Users\Muryllo\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.1.2\spring-boot-starter-jdbc-3.1.2.jar;C:\Users\Muryllo\.m2\repository\com\zaxxer\HikariCP\5.0.1\HikariCP-5.0.1.jar;C:\Users\Muryllo\.m2\repository\org\springframework\spring-jdbc\6.0.11\spring-jdbc-6.0.11.jar;C:\Users\Muryllo\.m2\repository\org\hibernate\orm\hibernate-core\6.2.6.Final\hibernate-core-6.2.6.Final.jar;C:\Users\Muryllo\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\Muryllo\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Muryllo\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\Muryllo\.m2\repository\io\smallrye\jandex\3.0.5\jandex-3.0.5.jar;C:\Users\Muryllo\.m2\repository\net\bytebuddy\byte-buddy\1.14.5\byte-buddy-1.14.5.jar;C:\Users\Muryllo\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.3\jaxb-runtime-4.0.3.jar;C:\Users\Muryllo\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.3\jaxb-core-4.0.3.jar;C:\Users\Muryllo\.m2\repository\org\eclipse\angus\angus-activation\2.0.1\angus-activation-2.0.1.jar;C:\Users\Muryllo\.m2\repository\org\glassfish\jaxb\txw2\4.0.3\txw2-4.0.3.jar;C:\Users\Muryllo\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\Muryllo\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Muryllo\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\Muryllo\.m2\repository\org\springframework\data\spring-data-jpa\3.1.2\spring-data-jpa-3.1.2.jar;C:\Users\Muryllo\.m2\repository\org\springframework\data\spring-data-commons\3.1.2\spring-data-commons-3.1.2.jar;C:\Users\Muryllo\.m2\repository\org\springframework\spring-orm\6.0.11\spring-orm-6.0.11.jar;C:\Users\Muryllo\.m2\repository\org\springframework\spring-tx\6.0.11\spring-tx-6.0.11.jar;C:\Users\Muryllo\.m2\repository\org\slf4j\slf4j-api\2.0.7\slf4j-api-2.0.7.jar;C:\Users\Muryllo\.m2\repository\org\springframework\spring-aspects\6.0.11\spring-aspects-6.0.11.jar;C:\Users\Muryllo\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-ui\2.1.0\springdoc-openapi-starter-webmvc-ui-2.1.0.jar;C:\Users\Muryllo\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-api\2.1.0\springdoc-openapi-starter-webmvc-api-2.1.0.jar;C:\Users\Muryllo\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.1.0\springdoc-openapi-starter-common-2.1.0.jar;C:\Users\Muryllo\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.9\swagger-core-jakarta-2.2.9.jar;C:\Users\Muryllo\.m2\repository\org\apache\commons\commons-lang3\3.12.0\commons-lang3-3.12.0.jar;C:\Users\Muryllo\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.9\swagger-annotations-jakarta-2.2.9.jar;C:\Users\Muryllo\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.9\swagger-models-jakarta-2.2.9.jar;C:\Users\Muryllo\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.15.2\jackson-dataformat-yaml-2.15.2.jar;C:\Users\Muryllo\.m2\repository\org\webjars\swagger-ui\4.18.2\swagger-ui-4.18.2.jar;C:\Users\Muryllo\.m2\repository\com\h2database\h2\2.1.214\h2-2.1.214.jar;C:\Users\Muryllo\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.1.2\spring-boot-starter-test-3.1.2.jar;C:\Users\Muryllo\.m2\repository\org\springframework\boot\spring-boot-test\3.1.2\spring-boot-test-3.1.2.jar;C:\Users\Muryllo\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.1.2\spring-boot-test-autoconfigure-3.1.2.jar;C:\Users\Muryllo\.m2\repository\com\jayway\jsonpath\json-path\2.8.0\json-path-2.8.0.jar;C:\Users\Muryllo\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\Muryllo\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\Muryllo\.m2\repository\net\minidev\json-smart\2.4.11\json-smart-2.4.11.jar;C:\Users\Muryllo\.m2\repository\net\minidev\accessors-smart\2.4.11\accessors-smart-2.4.11.jar;C:\Users\Muryllo\.m2\repository\org\ow2\asm\asm\9.3\asm-9.3.jar;C:\Users\Muryllo\.m2\repository\org\assertj\assertj-core\3.24.2\assertj-core-3.24.2.jar;C:\Users\Muryllo\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\Muryllo\.m2\repository\org\junit\jupiter\junit-jupiter\5.9.3\junit-jupiter-5.9.3.jar;C:\Users\Muryllo\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.9.3\junit-jupiter-params-5.9.3.jar;C:\Users\Muryllo\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.9.3\junit-jupiter-engine-5.9.3.jar;C:\Users\Muryllo\.m2\repository\org\junit\platform\junit-platform-engine\1.9.3\junit-platform-engine-1.9.3.jar;C:\Users\Muryllo\.m2\repository\org\mockito\mockito-core\5.3.1\mockito-core-5.3.1.jar;C:\Users\Muryllo\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.5\byte-buddy-agent-1.14.5.jar;C:\Users\Muryllo\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\Muryllo\.m2\repository\org\skyscreamer\jsonassert\1.5.1\jsonassert-1.5.1.jar;C:\Users\Muryllo\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\Muryllo\.m2\repository\org\springframework\spring-core\6.0.11\spring-core-6.0.11.jar;C:\Users\Muryllo\.m2\repository\org\springframework\spring-jcl\6.0.11\spring-jcl-6.0.11.jar;C:\Users\Muryllo\.m2\repository\org\springframework\spring-test\6.0.11\spring-test-6.0.11.jar;C:\Users\Muryllo\.m2\repository\org\xmlunit\xmlunit-core\2.9.1\xmlunit-core-2.9.1.jar;C:\Users\Muryllo\.m2\repository\junit\junit\4.13.2\junit-4.13.2.jar;C:\Users\Muryllo\.m2\repository\org\hamcrest\hamcrest-core\2.2\hamcrest-core-2.2.jar;C:\Users\Muryllo\.m2\repository\org\mockito\mockito-junit-jupiter\5.3.1\mockito-junit-jupiter-5.3.1.jar;C:\Users\Muryllo\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.9.3\junit-jupiter-api-5.9.3.jar;C:\Users\Muryllo\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\Muryllo\.m2\repository\org\junit\platform\junit-platform-commons\1.9.3\junit-platform-commons-1.9.3.jar;C:\Users\Muryllo\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;"/>
    <property name="java.vm.vendor" value="Azul Systems, Inc."/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="user.variant" value=""/>
    <property name="java.vendor.url" value="http://www.azul.com/"/>
    <property name="user.timezone" value="America/Sao_Paulo"/>
    <property name="org.jboss.logging.provider" value="slf4j"/>
    <property name="os.name" value="Windows 10"/>
    <property name="java.vm.specification.version" value="17"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="BR"/>
    <property name="sun.boot.library.path" value="C:\Users\Muryllo\.jdks\azul-17.0.8\bin"/>
    <property name="sun.java.command" value="C:\Users\Muryllo\AppData\Local\Temp\surefire9096831728647754276\surefirebooter-20230905114625875_3.jar C:\Users\Muryllo\AppData\Local\Temp\surefire9096831728647754276 2023-09-05T11-46-25_543-jvmRun1 surefire-20230905114625875_1tmp surefire_0-20230905114625875_2tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="C:\Users\Muryllo\Desktop\TestesComSpringApiVendas\Vendas\SpringExemplo\target\test-classes;C:\Users\Muryllo\Desktop\TestesComSpringApiVendas\Vendas\SpringExemplo\target\classes;C:\Users\Muryllo\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.1.2\spring-boot-starter-validation-3.1.2.jar;C:\Users\Muryllo\.m2\repository\org\springframework\boot\spring-boot-starter\3.1.2\spring-boot-starter-3.1.2.jar;C:\Users\Muryllo\.m2\repository\org\springframework\boot\spring-boot\3.1.2\spring-boot-3.1.2.jar;C:\Users\Muryllo\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.1.2\spring-boot-autoconfigure-3.1.2.jar;C:\Users\Muryllo\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.1.2\spring-boot-starter-logging-3.1.2.jar;C:\Users\Muryllo\.m2\repository\ch\qos\logback\logback-classic\1.4.8\logback-classic-1.4.8.jar;C:\Users\Muryllo\.m2\repository\ch\qos\logback\logback-core\1.4.8\logback-core-1.4.8.jar;C:\Users\Muryllo\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.20.0\log4j-to-slf4j-2.20.0.jar;C:\Users\Muryllo\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\Muryllo\.m2\repository\org\slf4j\jul-to-slf4j\2.0.7\jul-to-slf4j-2.0.7.jar;C:\Users\Muryllo\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\Muryllo\.m2\repository\org\yaml\snakeyaml\1.33\snakeyaml-1.33.jar;C:\Users\Muryllo\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.11\tomcat-embed-el-10.1.11.jar;C:\Users\Muryllo\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.1.Final\hibernate-validator-8.0.1.Final.jar;C:\Users\Muryllo\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\Muryllo\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\Muryllo\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Muryllo\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.1.2\spring-boot-starter-web-3.1.2.jar;C:\Users\Muryllo\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.1.2\spring-boot-starter-json-3.1.2.jar;C:\Users\Muryllo\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.15.2\jackson-databind-2.15.2.jar;C:\Users\Muryllo\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.15.2\jackson-annotations-2.15.2.jar;C:\Users\Muryllo\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.15.2\jackson-core-2.15.2.jar;C:\Users\Muryllo\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.15.2\jackson-datatype-jdk8-2.15.2.jar;C:\Users\Muryllo\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.15.2\jackson-datatype-jsr310-2.15.2.jar;C:\Users\Muryllo\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.15.2\jackson-module-parameter-names-2.15.2.jar;C:\Users\Muryllo\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.1.2\spring-boot-starter-tomcat-3.1.2.jar;C:\Users\Muryllo\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.11\tomcat-embed-core-10.1.11.jar;C:\Users\Muryllo\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.11\tomcat-embed-websocket-10.1.11.jar;C:\Users\Muryllo\.m2\repository\org\springframework\spring-web\6.0.11\spring-web-6.0.11.jar;C:\Users\Muryllo\.m2\repository\org\springframework\spring-beans\6.0.11\spring-beans-6.0.11.jar;C:\Users\Muryllo\.m2\repository\io\micrometer\micrometer-observation\1.11.2\micrometer-observation-1.11.2.jar;C:\Users\Muryllo\.m2\repository\io\micrometer\micrometer-commons\1.11.2\micrometer-commons-1.11.2.jar;C:\Users\Muryllo\.m2\repository\org\springframework\spring-webmvc\6.0.11\spring-webmvc-6.0.11.jar;C:\Users\Muryllo\.m2\repository\org\springframework\spring-aop\6.0.11\spring-aop-6.0.11.jar;C:\Users\Muryllo\.m2\repository\org\springframework\spring-context\6.0.11\spring-context-6.0.11.jar;C:\Users\Muryllo\.m2\repository\org\springframework\spring-expression\6.0.11\spring-expression-6.0.11.jar;C:\Users\Muryllo\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.1.2\spring-boot-starter-data-jpa-3.1.2.jar;C:\Users\Muryllo\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.1.2\spring-boot-starter-aop-3.1.2.jar;C:\Users\Muryllo\.m2\repository\org\aspectj\aspectjweaver\1.9.19\aspectjweaver-1.9.19.jar;C:\Users\Muryllo\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.1.2\spring-boot-starter-jdbc-3.1.2.jar;C:\Users\Muryllo\.m2\repository\com\zaxxer\HikariCP\5.0.1\HikariCP-5.0.1.jar;C:\Users\Muryllo\.m2\repository\org\springframework\spring-jdbc\6.0.11\spring-jdbc-6.0.11.jar;C:\Users\Muryllo\.m2\repository\org\hibernate\orm\hibernate-core\6.2.6.Final\hibernate-core-6.2.6.Final.jar;C:\Users\Muryllo\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\Muryllo\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Muryllo\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\Muryllo\.m2\repository\io\smallrye\jandex\3.0.5\jandex-3.0.5.jar;C:\Users\Muryllo\.m2\repository\net\bytebuddy\byte-buddy\1.14.5\byte-buddy-1.14.5.jar;C:\Users\Muryllo\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.3\jaxb-runtime-4.0.3.jar;C:\Users\Muryllo\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.3\jaxb-core-4.0.3.jar;C:\Users\Muryllo\.m2\repository\org\eclipse\angus\angus-activation\2.0.1\angus-activation-2.0.1.jar;C:\Users\Muryllo\.m2\repository\org\glassfish\jaxb\txw2\4.0.3\txw2-4.0.3.jar;C:\Users\Muryllo\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\Muryllo\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Muryllo\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\Muryllo\.m2\repository\org\springframework\data\spring-data-jpa\3.1.2\spring-data-jpa-3.1.2.jar;C:\Users\Muryllo\.m2\repository\org\springframework\data\spring-data-commons\3.1.2\spring-data-commons-3.1.2.jar;C:\Users\Muryllo\.m2\repository\org\springframework\spring-orm\6.0.11\spring-orm-6.0.11.jar;C:\Users\Muryllo\.m2\repository\org\springframework\spring-tx\6.0.11\spring-tx-6.0.11.jar;C:\Users\Muryllo\.m2\repository\org\slf4j\slf4j-api\2.0.7\slf4j-api-2.0.7.jar;C:\Users\Muryllo\.m2\repository\org\springframework\spring-aspects\6.0.11\spring-aspects-6.0.11.jar;C:\Users\Muryllo\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-ui\2.1.0\springdoc-openapi-starter-webmvc-ui-2.1.0.jar;C:\Users\Muryllo\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-api\2.1.0\springdoc-openapi-starter-webmvc-api-2.1.0.jar;C:\Users\Muryllo\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.1.0\springdoc-openapi-starter-common-2.1.0.jar;C:\Users\Muryllo\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.9\swagger-core-jakarta-2.2.9.jar;C:\Users\Muryllo\.m2\repository\org\apache\commons\commons-lang3\3.12.0\commons-lang3-3.12.0.jar;C:\Users\Muryllo\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.9\swagger-annotations-jakarta-2.2.9.jar;C:\Users\Muryllo\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.9\swagger-models-jakarta-2.2.9.jar;C:\Users\Muryllo\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.15.2\jackson-dataformat-yaml-2.15.2.jar;C:\Users\Muryllo\.m2\repository\org\webjars\swagger-ui\4.18.2\swagger-ui-4.18.2.jar;C:\Users\Muryllo\.m2\repository\com\h2database\h2\2.1.214\h2-2.1.214.jar;C:\Users\Muryllo\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.1.2\spring-boot-starter-test-3.1.2.jar;C:\Users\Muryllo\.m2\repository\org\springframework\boot\spring-boot-test\3.1.2\spring-boot-test-3.1.2.jar;C:\Users\Muryllo\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.1.2\spring-boot-test-autoconfigure-3.1.2.jar;C:\Users\Muryllo\.m2\repository\com\jayway\jsonpath\json-path\2.8.0\json-path-2.8.0.jar;C:\Users\Muryllo\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\Muryllo\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\Muryllo\.m2\repository\net\minidev\json-smart\2.4.11\json-smart-2.4.11.jar;C:\Users\Muryllo\.m2\repository\net\minidev\accessors-smart\2.4.11\accessors-smart-2.4.11.jar;C:\Users\Muryllo\.m2\repository\org\ow2\asm\asm\9.3\asm-9.3.jar;C:\Users\Muryllo\.m2\repository\org\assertj\assertj-core\3.24.2\assertj-core-3.24.2.jar;C:\Users\Muryllo\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\Muryllo\.m2\repository\org\junit\jupiter\junit-jupiter\5.9.3\junit-jupiter-5.9.3.jar;C:\Users\Muryllo\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.9.3\junit-jupiter-params-5.9.3.jar;C:\Users\Muryllo\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.9.3\junit-jupiter-engine-5.9.3.jar;C:\Users\Muryllo\.m2\repository\org\junit\platform\junit-platform-engine\1.9.3\junit-platform-engine-1.9.3.jar;C:\Users\Muryllo\.m2\repository\org\mockito\mockito-core\5.3.1\mockito-core-5.3.1.jar;C:\Users\Muryllo\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.5\byte-buddy-agent-1.14.5.jar;C:\Users\Muryllo\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\Muryllo\.m2\repository\org\skyscreamer\jsonassert\1.5.1\jsonassert-1.5.1.jar;C:\Users\Muryllo\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\Muryllo\.m2\repository\org\springframework\spring-core\6.0.11\spring-core-6.0.11.jar;C:\Users\Muryllo\.m2\repository\org\springframework\spring-jcl\6.0.11\spring-jcl-6.0.11.jar;C:\Users\Muryllo\.m2\repository\org\springframework\spring-test\6.0.11\spring-test-6.0.11.jar;C:\Users\Muryllo\.m2\repository\org\xmlunit\xmlunit-core\2.9.1\xmlunit-core-2.9.1.jar;C:\Users\Muryllo\.m2\repository\junit\junit\4.13.2\junit-4.13.2.jar;C:\Users\Muryllo\.m2\repository\org\hamcrest\hamcrest-core\2.2\hamcrest-core-2.2.jar;C:\Users\Muryllo\.m2\repository\org\mockito\mockito-junit-jupiter\5.3.1\mockito-junit-jupiter-5.3.1.jar;C:\Users\Muryllo\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.9.3\junit-jupiter-api-5.9.3.jar;C:\Users\Muryllo\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\Muryllo\.m2\repository\org\junit\platform\junit-platform-commons\1.9.3\junit-platform-commons-1.9.3.jar;C:\Users\Muryllo\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="C:\Users\Muryllo"/>
    <property name="user.language" value="pt"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2023-07-18"/>
    <property name="java.home" value="C:\Users\Muryllo\.jdks\azul-17.0.8"/>
    <property name="file.separator" value="\"/>
    <property name="basedir" value="C:\Users\Muryllo\Desktop\TestesComSpringApiVendas\Vendas\SpringExemplo"/>
    <property name="java.vm.compressedOopsMode" value="32-bit"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="FILE_LOG_CHARSET" value="windows-1252"/>
    <property name="java.awt.headless" value="true"/>
    <property name="surefire.real.class.path" value="C:\Users\Muryllo\AppData\Local\Temp\surefire9096831728647754276\surefirebooter-20230905114625875_3.jar"/>
    <property name="user.script" value=""/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="17.0.8+7-LTS"/>
    <property name="user.name" value="Muryllo"/>
    <property name="path.separator" value=";"/>
    <property name="os.version" value="10.0"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="Cp1252"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="java.vendor.version" value="Zulu17.44+15-CA"/>
    <property name="localRepository" value="C:\Users\Muryllo\.m2\repository"/>
    <property name="java.vendor.url.bug" value="http://www.azul.com/support/"/>
    <property name="java.io.tmpdir" value="C:\Users\Muryllo\AppData\Local\Temp\"/>
    <property name="idea.version" value="2023.1.4"/>
    <property name="java.version" value="17.0.8"/>
    <property name="user.dir" value="C:\Users\Muryllo\Desktop\TestesComSpringApiVendas\Vendas\SpringExemplo"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="PID" value="29156"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="CONSOLE_LOG_CHARSET" value="windows-1252"/>
    <property name="native.encoding" value="Cp1252"/>
    <property name="java.library.path" value="C:\Users\Muryllo\.jdks\azul-17.0.8\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\java\zulu11.50.19-ca-jdk11.0.12-win_x64\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:Users\muryllo\driver;C:\Program Files (x86)\Universal Extractor;C:\Program Files (x86)\Universal Extractor\bin;C:\xampp\php;C:\Program Files\Git\cmd;C:\Program Files (x86)\Microsoft SQL Server\140\Tools\Binn\;C:\Program Files\Microsoft SQL Server\140\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\140\DTS\Binn\;C:\Program Files\Microsoft SQL Server\140\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\130\Tools\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files (x86)\Java\jdk1.8.0_192\bin;C:\Users\Muryllo\driver;C:\Program Files\MongoDB\Server\6.0\bin;C:\Program Files\nodejs\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Muryllo\AppData\Local\Microsoft\WindowsApps;C:\Users\Muryllo\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2021.2\bin;;C:\Program Files\Azure Data Studio\bin;C:\Users\Muryllo\AppData\Roaming\npm;."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="java.vendor" value="Azul Systems, Inc."/>
    <property name="java.vm.version" value="17.0.8+7-LTS"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="61.0"/>
  </properties>
  <testcase name="listarUsuarioRepositoryId" classname="vendas.repositories.UserRepositoryTest" time="0.021">
    <system-out><![CDATA[2023-09-05T11:46:48.433-03:00  INFO 29156 --- [           main] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [vendas.repositories.UserRepositoryTest]: UserRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2023-09-05T11:46:48.442-03:00  INFO 29156 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration vendas.VendasApplication for test class vendas.repositories.UserRepositoryTest

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.1.2)

2023-09-05T11:46:48.484-03:00  INFO 29156 --- [           main] vendas.repositories.UserRepositoryTest   : Starting UserRepositoryTest using Java 17.0.8 with PID 29156 (started by Muryllo in C:\Users\Muryllo\Desktop\TestesComSpringApiVendas\Vendas\SpringExemplo)
2023-09-05T11:46:48.485-03:00  INFO 29156 --- [           main] vendas.repositories.UserRepositoryTest   : The following 1 profile is active: "test"
2023-09-05T11:46:48.639-03:00  INFO 29156 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-09-05T11:46:48.666-03:00  INFO 29156 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 27 ms. Found 5 JPA repository interfaces.
2023-09-05T11:46:48.682-03:00  INFO 29156 --- [           main] beddedDataSourceBeanFactoryPostProcessor : Replacing 'dataSource' DataSource bean with embedded version
2023-09-05T11:46:48.695-03:00  INFO 29156 --- [           main] o.s.j.d.e.EmbeddedDatabaseFactory        : Starting embedded database: url='jdbc:h2:mem:47a457d6-bf7c-431b-8834-411c7e91c301;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2023-09-05T11:46:48.726-03:00  INFO 29156 --- [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-09-05T11:46:48.743-03:00  INFO 29156 --- [           main] o.h.b.i.BytecodeProviderInitiator        : HHH000021: Bytecode provider name : bytebuddy
2023-09-05T11:46:48.743-03:00  INFO 29156 --- [           main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2023-09-05T11:46:48.781-03:00  INFO 29156 --- [           main] o.h.b.i.BytecodeProviderInitiator        : HHH000021: Bytecode provider name : bytebuddy
2023-09-05T11:46:48.800-03:00  WARN 29156 --- [           main] org.hibernate.mapping.RootClass          : HHH000038: Composite-id class does not override equals(): vendas.entites.compostas.OrderItemPK
2023-09-05T11:46:48.801-03:00  WARN 29156 --- [           main] org.hibernate.mapping.RootClass          : HHH000039: Composite-id class does not override hashCode(): vendas.entites.compostas.OrderItemPK
2023-09-05T11:46:48.893-03:00  INFO 29156 --- [           main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Hibernate: 
    drop table if exists categories cascade 
Hibernate: 
    drop table if exists order_item cascade 
Hibernate: 
    drop table if exists orders cascade 
Hibernate: 
    drop table if exists payments cascade 
Hibernate: 
    drop table if exists product_category cascade 
Hibernate: 
    drop table if exists products cascade 
Hibernate: 
    drop table if exists users cascade 
Hibernate: 
    create table categories (
        id bigint generated by default as identity,
        name varchar(255),
        primary key (id)
    )
Hibernate: 
    create table order_item (
        price float(53),
        quantity integer,
        order_id bigint not null,
        product_id bigint not null,
        primary key (order_id, product_id)
    )
Hibernate: 
    create table orders (
        order_status integer,
        client_id bigint,
        id bigint generated by default as identity,
        moment timestamp(6) with time zone,
        primary key (id)
    )
Hibernate: 
    create table payments (
        moment timestamp(6) with time zone,
        order_id bigint not null,
        primary key (order_id)
    )
Hibernate: 
    create table product_category (
        category_id bigint not null,
        product_id bigint not null,
        primary key (category_id, product_id)
    )
Hibernate: 
    create table products (
        price float(53) not null,
        id bigint generated by default as identity,
        description varchar(255) not null,
        img_url varchar(255) not null,
        name varchar(255) not null,
        primary key (id)
    )
Hibernate: 
    create table users (
        id bigint generated by default as identity,
        phone varchar(9),
        email varchar(255) not null,
        name varchar(255) not null,
        password varchar(255) not null,
        primary key (id)
    )
Hibernate: 
    alter table if exists order_item 
       add constraint FKc5uhmwioq5kscilyuchp4w49o 
       foreign key (product_id) 
       references products
Hibernate: 
    alter table if exists order_item 
       add constraint FKt4dc2r9nbvbujrljv3e23iibt 
       foreign key (order_id) 
       references orders
Hibernate: 
    alter table if exists orders 
       add constraint FKojjigrbyd7qrcwrxvr7e9bdr2 
       foreign key (client_id) 
       references users
Hibernate: 
    alter table if exists payments 
       add constraint FK81gagumt0r8y3rmudcgpbk42l 
       foreign key (order_id) 
       references orders
Hibernate: 
    alter table if exists product_category 
       add constraint FKdswxvx2nl2032yjv609r29sdr 
       foreign key (category_id) 
       references categories
Hibernate: 
    alter table if exists product_category 
       add constraint FK5w81wp3eyugvi2lii94iao3fm 
       foreign key (product_id) 
       references products
2023-09-05T11:46:48.914-03:00  INFO 29156 --- [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-09-05T11:46:49.041-03:00  INFO 29156 --- [           main] vendas.repositories.UserRepositoryTest   : Started UserRepositoryTest in 0.595 seconds (process running for 22.866)
Hibernate: 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.phone 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    insert 
    into
        users
        (email,name,password,phone,id) 
    values
        (?,?,?,?,default)
Hibernate: 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.phone 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    insert 
    into
        users
        (email,name,password,phone,id) 
    values
        (?,?,?,?,default)
2023-09-05T11:46:49.061-03:00  INFO 29156 --- [           main] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
Hibernate: 
    drop table if exists categories cascade 
Hibernate: 
    drop table if exists order_item cascade 
Hibernate: 
    drop table if exists orders cascade 
Hibernate: 
    drop table if exists payments cascade 
Hibernate: 
    drop table if exists product_category cascade 
Hibernate: 
    drop table if exists products cascade 
Hibernate: 
    drop table if exists users cascade 
]]></system-out>
  </testcase>
  <testcase name="listarUsuarioRepository" classname="vendas.repositories.UserRepositoryTest" time="0.025">
    <system-out><![CDATA[
  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.1.2)

2023-09-05T11:46:49.104-03:00  INFO 29156 --- [           main] vendas.repositories.UserRepositoryTest   : Starting UserRepositoryTest using Java 17.0.8 with PID 29156 (started by Muryllo in C:\Users\Muryllo\Desktop\TestesComSpringApiVendas\Vendas\SpringExemplo)
2023-09-05T11:46:49.105-03:00  INFO 29156 --- [           main] vendas.repositories.UserRepositoryTest   : The following 1 profile is active: "test"
2023-09-05T11:46:49.238-03:00  INFO 29156 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-09-05T11:46:49.261-03:00  INFO 29156 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 22 ms. Found 5 JPA repository interfaces.
2023-09-05T11:46:49.273-03:00  INFO 29156 --- [           main] beddedDataSourceBeanFactoryPostProcessor : Replacing 'dataSource' DataSource bean with embedded version
2023-09-05T11:46:49.285-03:00  INFO 29156 --- [           main] o.s.j.d.e.EmbeddedDatabaseFactory        : Starting embedded database: url='jdbc:h2:mem:2c52f1fd-d205-4e75-98d8-d2b2cac04a30;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2023-09-05T11:46:49.307-03:00  INFO 29156 --- [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-09-05T11:46:49.320-03:00  INFO 29156 --- [           main] o.h.b.i.BytecodeProviderInitiator        : HHH000021: Bytecode provider name : bytebuddy
2023-09-05T11:46:49.320-03:00  INFO 29156 --- [           main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2023-09-05T11:46:49.358-03:00  INFO 29156 --- [           main] o.h.b.i.BytecodeProviderInitiator        : HHH000021: Bytecode provider name : bytebuddy
2023-09-05T11:46:49.380-03:00  WARN 29156 --- [           main] org.hibernate.mapping.RootClass          : HHH000038: Composite-id class does not override equals(): vendas.entites.compostas.OrderItemPK
2023-09-05T11:46:49.380-03:00  WARN 29156 --- [           main] org.hibernate.mapping.RootClass          : HHH000039: Composite-id class does not override hashCode(): vendas.entites.compostas.OrderItemPK
2023-09-05T11:46:49.467-03:00  INFO 29156 --- [           main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Hibernate: 
    drop table if exists categories cascade 
Hibernate: 
    drop table if exists order_item cascade 
Hibernate: 
    drop table if exists orders cascade 
Hibernate: 
    drop table if exists payments cascade 
Hibernate: 
    drop table if exists product_category cascade 
Hibernate: 
    drop table if exists products cascade 
Hibernate: 
    drop table if exists users cascade 
Hibernate: 
    create table categories (
        id bigint generated by default as identity,
        name varchar(255),
        primary key (id)
    )
Hibernate: 
    create table order_item (
        price float(53),
        quantity integer,
        order_id bigint not null,
        product_id bigint not null,
        primary key (order_id, product_id)
    )
Hibernate: 
    create table orders (
        order_status integer,
        client_id bigint,
        id bigint generated by default as identity,
        moment timestamp(6) with time zone,
        primary key (id)
    )
Hibernate: 
    create table payments (
        moment timestamp(6) with time zone,
        order_id bigint not null,
        primary key (order_id)
    )
Hibernate: 
    create table product_category (
        category_id bigint not null,
        product_id bigint not null,
        primary key (category_id, product_id)
    )
Hibernate: 
    create table products (
        price float(53) not null,
        id bigint generated by default as identity,
        description varchar(255) not null,
        img_url varchar(255) not null,
        name varchar(255) not null,
        primary key (id)
    )
Hibernate: 
    create table users (
        id bigint generated by default as identity,
        phone varchar(9),
        email varchar(255) not null,
        name varchar(255) not null,
        password varchar(255) not null,
        primary key (id)
    )
Hibernate: 
    alter table if exists order_item 
       add constraint FKc5uhmwioq5kscilyuchp4w49o 
       foreign key (product_id) 
       references products
Hibernate: 
    alter table if exists order_item 
       add constraint FKt4dc2r9nbvbujrljv3e23iibt 
       foreign key (order_id) 
       references orders
Hibernate: 
    alter table if exists orders 
       add constraint FKojjigrbyd7qrcwrxvr7e9bdr2 
       foreign key (client_id) 
       references users
Hibernate: 
    alter table if exists payments 
       add constraint FK81gagumt0r8y3rmudcgpbk42l 
       foreign key (order_id) 
       references orders
Hibernate: 
    alter table if exists product_category 
       add constraint FKdswxvx2nl2032yjv609r29sdr 
       foreign key (category_id) 
       references categories
Hibernate: 
    alter table if exists product_category 
       add constraint FK5w81wp3eyugvi2lii94iao3fm 
       foreign key (product_id) 
       references products
2023-09-05T11:46:49.501-03:00  INFO 29156 --- [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-09-05T11:46:49.609-03:00  INFO 29156 --- [           main] vendas.repositories.UserRepositoryTest   : Started UserRepositoryTest in 0.54 seconds (process running for 23.434)
Hibernate: 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.phone 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    insert 
    into
        users
        (email,name,password,phone,id) 
    values
        (?,?,?,?,default)
Hibernate: 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.phone 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    insert 
    into
        users
        (email,name,password,phone,id) 
    values
        (?,?,?,?,default)
Hibernate: 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.phone 
    from
        users u1_0
2023-09-05T11:46:49.632-03:00  INFO 29156 --- [           main] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
Hibernate: 
    drop table if exists categories cascade 
Hibernate: 
    drop table if exists order_item cascade 
Hibernate: 
    drop table if exists orders cascade 
Hibernate: 
    drop table if exists payments cascade 
Hibernate: 
    drop table if exists product_category cascade 
Hibernate: 
    drop table if exists products cascade 
Hibernate: 
    drop table if exists users cascade 
]]></system-out>
  </testcase>
  <testcase name="atualizarUsuarioRepository" classname="vendas.repositories.UserRepositoryTest" time="0.022">
    <system-out><![CDATA[
  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.1.2)

2023-09-05T11:46:49.677-03:00  INFO 29156 --- [           main] vendas.repositories.UserRepositoryTest   : Starting UserRepositoryTest using Java 17.0.8 with PID 29156 (started by Muryllo in C:\Users\Muryllo\Desktop\TestesComSpringApiVendas\Vendas\SpringExemplo)
2023-09-05T11:46:49.677-03:00  INFO 29156 --- [           main] vendas.repositories.UserRepositoryTest   : The following 1 profile is active: "test"
2023-09-05T11:46:49.794-03:00  INFO 29156 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-09-05T11:46:49.814-03:00  INFO 29156 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 18 ms. Found 5 JPA repository interfaces.
2023-09-05T11:46:49.829-03:00  INFO 29156 --- [           main] beddedDataSourceBeanFactoryPostProcessor : Replacing 'dataSource' DataSource bean with embedded version
2023-09-05T11:46:49.842-03:00  INFO 29156 --- [           main] o.s.j.d.e.EmbeddedDatabaseFactory        : Starting embedded database: url='jdbc:h2:mem:d17444c9-8d29-4720-a939-8672ea86bcf6;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2023-09-05T11:46:49.869-03:00  INFO 29156 --- [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-09-05T11:46:49.887-03:00  INFO 29156 --- [           main] o.h.b.i.BytecodeProviderInitiator        : HHH000021: Bytecode provider name : bytebuddy
2023-09-05T11:46:49.888-03:00  INFO 29156 --- [           main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2023-09-05T11:46:49.931-03:00  INFO 29156 --- [           main] o.h.b.i.BytecodeProviderInitiator        : HHH000021: Bytecode provider name : bytebuddy
2023-09-05T11:46:49.955-03:00  WARN 29156 --- [           main] org.hibernate.mapping.RootClass          : HHH000038: Composite-id class does not override equals(): vendas.entites.compostas.OrderItemPK
2023-09-05T11:46:49.955-03:00  WARN 29156 --- [           main] org.hibernate.mapping.RootClass          : HHH000039: Composite-id class does not override hashCode(): vendas.entites.compostas.OrderItemPK
2023-09-05T11:46:50.032-03:00  INFO 29156 --- [           main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Hibernate: 
    drop table if exists categories cascade 
Hibernate: 
    drop table if exists order_item cascade 
Hibernate: 
    drop table if exists orders cascade 
Hibernate: 
    drop table if exists payments cascade 
Hibernate: 
    drop table if exists product_category cascade 
Hibernate: 
    drop table if exists products cascade 
Hibernate: 
    drop table if exists users cascade 
Hibernate: 
    create table categories (
        id bigint generated by default as identity,
        name varchar(255),
        primary key (id)
    )
Hibernate: 
    create table order_item (
        price float(53),
        quantity integer,
        order_id bigint not null,
        product_id bigint not null,
        primary key (order_id, product_id)
    )
Hibernate: 
    create table orders (
        order_status integer,
        client_id bigint,
        id bigint generated by default as identity,
        moment timestamp(6) with time zone,
        primary key (id)
    )
Hibernate: 
    create table payments (
        moment timestamp(6) with time zone,
        order_id bigint not null,
        primary key (order_id)
    )
Hibernate: 
    create table product_category (
        category_id bigint not null,
        product_id bigint not null,
        primary key (category_id, product_id)
    )
Hibernate: 
    create table products (
        price float(53) not null,
        id bigint generated by default as identity,
        description varchar(255) not null,
        img_url varchar(255) not null,
        name varchar(255) not null,
        primary key (id)
    )
Hibernate: 
    create table users (
        id bigint generated by default as identity,
        phone varchar(9),
        email varchar(255) not null,
        name varchar(255) not null,
        password varchar(255) not null,
        primary key (id)
    )
Hibernate: 
    alter table if exists order_item 
       add constraint FKc5uhmwioq5kscilyuchp4w49o 
       foreign key (product_id) 
       references products
Hibernate: 
    alter table if exists order_item 
       add constraint FKt4dc2r9nbvbujrljv3e23iibt 
       foreign key (order_id) 
       references orders
Hibernate: 
    alter table if exists orders 
       add constraint FKojjigrbyd7qrcwrxvr7e9bdr2 
       foreign key (client_id) 
       references users
Hibernate: 
    alter table if exists payments 
       add constraint FK81gagumt0r8y3rmudcgpbk42l 
       foreign key (order_id) 
       references orders
Hibernate: 
    alter table if exists product_category 
       add constraint FKdswxvx2nl2032yjv609r29sdr 
       foreign key (category_id) 
       references categories
Hibernate: 
    alter table if exists product_category 
       add constraint FK5w81wp3eyugvi2lii94iao3fm 
       foreign key (product_id) 
       references products
2023-09-05T11:46:50.048-03:00  INFO 29156 --- [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-09-05T11:46:50.191-03:00  INFO 29156 --- [           main] vendas.repositories.UserRepositoryTest   : Started UserRepositoryTest in 0.552 seconds (process running for 24.016)
Hibernate: 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.phone 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    insert 
    into
        users
        (email,name,password,phone,id) 
    values
        (?,?,?,?,default)
Hibernate: 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.phone 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    insert 
    into
        users
        (email,name,password,phone,id) 
    values
        (?,?,?,?,default)
2023-09-05T11:46:50.211-03:00  INFO 29156 --- [           main] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
Hibernate: 
    drop table if exists categories cascade 
Hibernate: 
    drop table if exists order_item cascade 
Hibernate: 
    drop table if exists orders cascade 
Hibernate: 
    drop table if exists payments cascade 
Hibernate: 
    drop table if exists product_category cascade 
Hibernate: 
    drop table if exists products cascade 
Hibernate: 
    drop table if exists users cascade 
]]></system-out>
  </testcase>
  <testcase name="salvarUsuarioRepository" classname="vendas.repositories.UserRepositoryTest" time="0.02">
    <system-out><![CDATA[
  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.1.2)

2023-09-05T11:46:50.251-03:00  INFO 29156 --- [           main] vendas.repositories.UserRepositoryTest   : Starting UserRepositoryTest using Java 17.0.8 with PID 29156 (started by Muryllo in C:\Users\Muryllo\Desktop\TestesComSpringApiVendas\Vendas\SpringExemplo)
2023-09-05T11:46:50.251-03:00  INFO 29156 --- [           main] vendas.repositories.UserRepositoryTest   : The following 1 profile is active: "test"
2023-09-05T11:46:50.370-03:00  INFO 29156 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-09-05T11:46:50.398-03:00  INFO 29156 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 27 ms. Found 5 JPA repository interfaces.
2023-09-05T11:46:50.412-03:00  INFO 29156 --- [           main] beddedDataSourceBeanFactoryPostProcessor : Replacing 'dataSource' DataSource bean with embedded version
2023-09-05T11:46:50.422-03:00  INFO 29156 --- [           main] o.s.j.d.e.EmbeddedDatabaseFactory        : Starting embedded database: url='jdbc:h2:mem:491917b4-518c-4a40-be61-91b2f2e6bc42;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2023-09-05T11:46:50.440-03:00  INFO 29156 --- [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-09-05T11:46:50.454-03:00  INFO 29156 --- [           main] o.h.b.i.BytecodeProviderInitiator        : HHH000021: Bytecode provider name : bytebuddy
2023-09-05T11:46:50.454-03:00  INFO 29156 --- [           main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2023-09-05T11:46:50.494-03:00  INFO 29156 --- [           main] o.h.b.i.BytecodeProviderInitiator        : HHH000021: Bytecode provider name : bytebuddy
2023-09-05T11:46:50.518-03:00  WARN 29156 --- [           main] org.hibernate.mapping.RootClass          : HHH000038: Composite-id class does not override equals(): vendas.entites.compostas.OrderItemPK
2023-09-05T11:46:50.518-03:00  WARN 29156 --- [           main] org.hibernate.mapping.RootClass          : HHH000039: Composite-id class does not override hashCode(): vendas.entites.compostas.OrderItemPK
2023-09-05T11:46:50.594-03:00  INFO 29156 --- [           main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Hibernate: 
    drop table if exists categories cascade 
Hibernate: 
    drop table if exists order_item cascade 
Hibernate: 
    drop table if exists orders cascade 
Hibernate: 
    drop table if exists payments cascade 
Hibernate: 
    drop table if exists product_category cascade 
Hibernate: 
    drop table if exists products cascade 
Hibernate: 
    drop table if exists users cascade 
Hibernate: 
    create table categories (
        id bigint generated by default as identity,
        name varchar(255),
        primary key (id)
    )
Hibernate: 
    create table order_item (
        price float(53),
        quantity integer,
        order_id bigint not null,
        product_id bigint not null,
        primary key (order_id, product_id)
    )
Hibernate: 
    create table orders (
        order_status integer,
        client_id bigint,
        id bigint generated by default as identity,
        moment timestamp(6) with time zone,
        primary key (id)
    )
Hibernate: 
    create table payments (
        moment timestamp(6) with time zone,
        order_id bigint not null,
        primary key (order_id)
    )
Hibernate: 
    create table product_category (
        category_id bigint not null,
        product_id bigint not null,
        primary key (category_id, product_id)
    )
Hibernate: 
    create table products (
        price float(53) not null,
        id bigint generated by default as identity,
        description varchar(255) not null,
        img_url varchar(255) not null,
        name varchar(255) not null,
        primary key (id)
    )
Hibernate: 
    create table users (
        id bigint generated by default as identity,
        phone varchar(9),
        email varchar(255) not null,
        name varchar(255) not null,
        password varchar(255) not null,
        primary key (id)
    )
Hibernate: 
    alter table if exists order_item 
       add constraint FKc5uhmwioq5kscilyuchp4w49o 
       foreign key (product_id) 
       references products
Hibernate: 
    alter table if exists order_item 
       add constraint FKt4dc2r9nbvbujrljv3e23iibt 
       foreign key (order_id) 
       references orders
Hibernate: 
    alter table if exists orders 
       add constraint FKojjigrbyd7qrcwrxvr7e9bdr2 
       foreign key (client_id) 
       references users
Hibernate: 
    alter table if exists payments 
       add constraint FK81gagumt0r8y3rmudcgpbk42l 
       foreign key (order_id) 
       references orders
Hibernate: 
    alter table if exists product_category 
       add constraint FKdswxvx2nl2032yjv609r29sdr 
       foreign key (category_id) 
       references categories
Hibernate: 
    alter table if exists product_category 
       add constraint FK5w81wp3eyugvi2lii94iao3fm 
       foreign key (product_id) 
       references products
2023-09-05T11:46:50.610-03:00  INFO 29156 --- [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-09-05T11:46:50.725-03:00  INFO 29156 --- [           main] vendas.repositories.UserRepositoryTest   : Started UserRepositoryTest in 0.507 seconds (process running for 24.551)
Hibernate: 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.phone 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    insert 
    into
        users
        (email,name,password,phone,id) 
    values
        (?,?,?,?,default)
Hibernate: 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.phone 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    insert 
    into
        users
        (email,name,password,phone,id) 
    values
        (?,?,?,?,default)
2023-09-05T11:46:50.745-03:00  INFO 29156 --- [           main] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
Hibernate: 
    drop table if exists categories cascade 
Hibernate: 
    drop table if exists order_item cascade 
Hibernate: 
    drop table if exists orders cascade 
Hibernate: 
    drop table if exists payments cascade 
Hibernate: 
    drop table if exists product_category cascade 
Hibernate: 
    drop table if exists products cascade 
Hibernate: 
    drop table if exists users cascade 
]]></system-out>
  </testcase>
  <testcase name="deletarUsuarioRepository" classname="vendas.repositories.UserRepositoryTest" time="0.029">
    <system-out><![CDATA[
  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.1.2)

2023-09-05T11:46:50.789-03:00  INFO 29156 --- [           main] vendas.repositories.UserRepositoryTest   : Starting UserRepositoryTest using Java 17.0.8 with PID 29156 (started by Muryllo in C:\Users\Muryllo\Desktop\TestesComSpringApiVendas\Vendas\SpringExemplo)
2023-09-05T11:46:50.789-03:00  INFO 29156 --- [           main] vendas.repositories.UserRepositoryTest   : The following 1 profile is active: "test"
2023-09-05T11:46:50.913-03:00  INFO 29156 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-09-05T11:46:50.941-03:00  INFO 29156 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 28 ms. Found 5 JPA repository interfaces.
2023-09-05T11:46:50.956-03:00  INFO 29156 --- [           main] beddedDataSourceBeanFactoryPostProcessor : Replacing 'dataSource' DataSource bean with embedded version
2023-09-05T11:46:50.969-03:00  INFO 29156 --- [           main] o.s.j.d.e.EmbeddedDatabaseFactory        : Starting embedded database: url='jdbc:h2:mem:13436cc8-9376-4666-a6d0-9511f92ba067;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2023-09-05T11:46:50.994-03:00  INFO 29156 --- [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-09-05T11:46:51.012-03:00  INFO 29156 --- [           main] o.h.b.i.BytecodeProviderInitiator        : HHH000021: Bytecode provider name : bytebuddy
2023-09-05T11:46:51.012-03:00  INFO 29156 --- [           main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2023-09-05T11:46:51.049-03:00  INFO 29156 --- [           main] o.h.b.i.BytecodeProviderInitiator        : HHH000021: Bytecode provider name : bytebuddy
2023-09-05T11:46:51.071-03:00  WARN 29156 --- [           main] org.hibernate.mapping.RootClass          : HHH000038: Composite-id class does not override equals(): vendas.entites.compostas.OrderItemPK
2023-09-05T11:46:51.071-03:00  WARN 29156 --- [           main] org.hibernate.mapping.RootClass          : HHH000039: Composite-id class does not override hashCode(): vendas.entites.compostas.OrderItemPK
2023-09-05T11:46:51.150-03:00  INFO 29156 --- [           main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Hibernate: 
    drop table if exists categories cascade 
Hibernate: 
    drop table if exists order_item cascade 
Hibernate: 
    drop table if exists orders cascade 
Hibernate: 
    drop table if exists payments cascade 
Hibernate: 
    drop table if exists product_category cascade 
Hibernate: 
    drop table if exists products cascade 
Hibernate: 
    drop table if exists users cascade 
Hibernate: 
    create table categories (
        id bigint generated by default as identity,
        name varchar(255),
        primary key (id)
    )
Hibernate: 
    create table order_item (
        price float(53),
        quantity integer,
        order_id bigint not null,
        product_id bigint not null,
        primary key (order_id, product_id)
    )
Hibernate: 
    create table orders (
        order_status integer,
        client_id bigint,
        id bigint generated by default as identity,
        moment timestamp(6) with time zone,
        primary key (id)
    )
Hibernate: 
    create table payments (
        moment timestamp(6) with time zone,
        order_id bigint not null,
        primary key (order_id)
    )
Hibernate: 
    create table product_category (
        category_id bigint not null,
        product_id bigint not null,
        primary key (category_id, product_id)
    )
Hibernate: 
    create table products (
        price float(53) not null,
        id bigint generated by default as identity,
        description varchar(255) not null,
        img_url varchar(255) not null,
        name varchar(255) not null,
        primary key (id)
    )
Hibernate: 
    create table users (
        id bigint generated by default as identity,
        phone varchar(9),
        email varchar(255) not null,
        name varchar(255) not null,
        password varchar(255) not null,
        primary key (id)
    )
Hibernate: 
    alter table if exists order_item 
       add constraint FKc5uhmwioq5kscilyuchp4w49o 
       foreign key (product_id) 
       references products
Hibernate: 
    alter table if exists order_item 
       add constraint FKt4dc2r9nbvbujrljv3e23iibt 
       foreign key (order_id) 
       references orders
Hibernate: 
    alter table if exists orders 
       add constraint FKojjigrbyd7qrcwrxvr7e9bdr2 
       foreign key (client_id) 
       references users
Hibernate: 
    alter table if exists payments 
       add constraint FK81gagumt0r8y3rmudcgpbk42l 
       foreign key (order_id) 
       references orders
Hibernate: 
    alter table if exists product_category 
       add constraint FKdswxvx2nl2032yjv609r29sdr 
       foreign key (category_id) 
       references categories
Hibernate: 
    alter table if exists product_category 
       add constraint FK5w81wp3eyugvi2lii94iao3fm 
       foreign key (product_id) 
       references products
2023-09-05T11:46:51.171-03:00  INFO 29156 --- [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-09-05T11:46:51.270-03:00  INFO 29156 --- [           main] vendas.repositories.UserRepositoryTest   : Started UserRepositoryTest in 0.519 seconds (process running for 25.096)
Hibernate: 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.phone 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    insert 
    into
        users
        (email,name,password,phone,id) 
    values
        (?,?,?,?,default)
Hibernate: 
    select
        u1_0.id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.phone 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    insert 
    into
        users
        (email,name,password,phone,id) 
    values
        (?,?,?,?,default)
Hibernate: 
    delete 
    from
        users 
    where
        id=?
Hibernate: 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
2023-09-05T11:46:51.297-03:00  INFO 29156 --- [           main] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
Hibernate: 
    drop table if exists categories cascade 
Hibernate: 
    drop table if exists order_item cascade 
Hibernate: 
    drop table if exists orders cascade 
Hibernate: 
    drop table if exists payments cascade 
Hibernate: 
    drop table if exists product_category cascade 
Hibernate: 
    drop table if exists products cascade 
Hibernate: 
    drop table if exists users cascade 
]]></system-out>
  </testcase>
</testsuite>