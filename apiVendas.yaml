openapi: 3.0.1
info:
  title: API - Simulação de Vendas de produtos
  description: API desenvolvida para gerenciar os produtos
  version: '1'
servers:
  - url: http://localhost:8080
    description: Generated server url
paths:
  /users/update/{id}:
    put:
      tags:
        - Feature - Clientes
      summary: ' : Atualiza os dados do  cliente pelo ID'
      operationId: update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
  /products/update/{id}:
    put:
      tags:
        - Feature - Produtos
      summary: ' : Atualiza os dados do  produto pelo ID'
      operationId: update_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Product'
  /users/save:
    post:
      tags:
        - Feature - Clientes
      summary: ' : Insere os dados dos clientes'
      operationId: insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserDTO'
  /products/save:
    post:
      tags:
        - Feature - Produtos
      summary: ' : Insere  os dados do produtos'
      operationId: insert_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Product'
  /users:
    get:
      tags:
        - Feature - Clientes
      summary: ' : Lista todos os clientes'
      operationId: findAll
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDTO'
  /users/{id}:
    get:
      tags:
        - Feature - Clientes
      summary: ' : Lista todos os clientes pelo ID'
      operationId: findById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserDTO'
  /products:
    get:
      tags:
        - Feature - Produtos
      summary: ' : Lista todos os produtos'
      operationId: findAll_1
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
  /products/{id}:
    get:
      tags:
        - Feature - Produtos
      summary: ' : Lista todos os produtos pelo ID'
      operationId: findById_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Product'
  /products/name/{name}:
    get:
      tags:
        - Feature - Produtos
      summary: ' : Lista todos os produtos pelo nome'
      operationId: findByName
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Product'
  /order:
    get:
      tags:
        - Feature - Pedidos
      summary: ' : Lista todos os pedidos'
      operationId: findAll_2
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
  /order/{id}:
    get:
      tags:
        - Feature - Pedidos
      summary: ' : Lista todos os pedidos pelo id'
      operationId: findById_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Order'
  /categories:
    get:
      tags:
        - Feature - Categorias
      summary: ' : Lista todas as categorias'
      operationId: findAll_3
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
  /categories/{id}:
    get:
      tags:
        - Feature - Categorias
      summary: ' : Lista todas as categorias pelo id'
      operationId: findById_3
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Category'
  /users/delete/{id}:
    delete:
      tags:
        - Feature - Clientes
      summary: ' : Exclui um cliente pelo id'
      operationId: delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
  /products/delete/{id}:
    delete:
      tags:
        - Feature - Produtos
      summary: ' : Exclui um produto pelo id'
      operationId: delete_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
components:
  schemas:
    User:
      required:
        - email
        - name
        - password
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          description: Nome do Cliente
          example: Muryllo Soares
        email:
          type: string
          description: Seu email
          example: MurylloSoares@gmail.com
        phone:
          type: string
          description: Seu celular
          example: 12345-678 padrão americano ou 978654321
        password:
          type: string
          description: Digite sua senha
          example: '123456'
    Category:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    Product:
      required:
        - description
        - imgUrl
        - name
        - price
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          description: Nome do Produto
          example: Iphone
        description:
          type: string
          description: Descrição do Produto
          example: Essa iphone oferece praticidade no dia a dia...
        price:
          type: number
          description: Preço do Produto
          format: double
          example: 250.5
        imgUrl:
          type: string
          description: URL da imagem  do Produto
          example: https://www.imgurl.com
        categories:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Category'
    UserDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        email:
          type: string
    Order:
      type: object
      properties:
        id:
          type: integer
          format: int64
        moment:
          type: string
          format: date-time
        orderStatus:
          type: string
          enum:
            - WAITING_PAYMENT
            - PAID
            - SHIPPED
            - DELIVERED
            - CANCELED
        client:
          $ref: '#/components/schemas/User'
        items:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
        payment:
          $ref: '#/components/schemas/Payment'
        total:
          type: number
          format: double
    OrderItem:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/OrderItemPK'
        quantity:
          type: integer
          format: int32
        price:
          type: number
          format: double
        subTotal:
          type: number
          format: double
    OrderItemPK:
      type: object
      properties:
        order:
          $ref: '#/components/schemas/Order'
        product:
          $ref: '#/components/schemas/Product'
    Payment:
      type: object
      properties:
        id:
          type: integer
          format: int64
        moment:
          type: string
          format: date-time
